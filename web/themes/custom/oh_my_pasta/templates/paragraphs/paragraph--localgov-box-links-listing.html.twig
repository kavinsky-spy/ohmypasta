{#
/**
 * @file
 * Default theme implementation to display a Box links listing paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{# Gets heading level in 'Heading level x' format, splits the string from 'level' onwards and removes whitespace #}
{% set heading_level = content.localgov_heading_level.0['#markup']|split('level')[1]|replace({' ' : ''}) %}

{# Sets the expand button text and grid type - ONLY sets it if both fields have a value #}
{% if content.field_view_more_text.0 and content.field_view_less_text.0%}
  {% set type = 'expand' %}
  {% set more_text = content.field_view_more_text.0 %}
  {% set less_text = content.field_view_less_text.0 %}
{% endif %}

{% block paragraph %}
  {% embed "@organisms/grid/grid.twig" with {
    grid_heading: content.localgov_title.0,
    grid_heading_level: heading_level,
    grid_items_per_row: content.field_items_per_row.0['#markup'],
    grid_bg_color: content.field_background_colour.0['#markup']|lower|replace({' ': ''}),
    grid_cta_url: content.localgov_link.0['#url']|render,
    grid_cta_text: content.localgov_link.0['#title'],
    grid_type: type,
    grid_more_text: more_text,
    grid_less_text: less_text,
    grid_items: content.localgov_paragraphs['#items'],
  } %}
    {% block grid_items_block %}
      {{ content.localgov_paragraphs }}
    {% endblock %}
  {% endembed %}
{% endblock paragraph %}
