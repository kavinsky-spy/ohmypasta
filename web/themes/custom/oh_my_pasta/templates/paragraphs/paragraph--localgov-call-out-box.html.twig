{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 * - heading: Title (heading element).
 * - colour_theme: Value of the colour theme field.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{# Get parent type - If it's a node use the large variation, if not (paragraph), use the small #}
{% set parentType = paragraph._referringItem.parent.parent.entity.entityTypeId %}

{% include "@molecules/call-out-box/call-out-box.twig" with {
  call_out_box_heading: content.localgov_header_text.0,
  call_out_box_heading_level: content.localgov_heading_level.0['#markup']|split(' ')|last,
  call_out_box_text: content.localgov_body_text,
  call_out_box_cta_text: content.localgov_button.0['#title'],
  call_out_box_cta_url: content.localgov_button.0['#url']|render,
  call_out_box_cta_new_window: open_in_new_window,
  call_out_box_large: parentType == 'node' ? true : false,
  call_out_box_color: content.localgov_colour_theme.0['#markup']|lower,
} %}
